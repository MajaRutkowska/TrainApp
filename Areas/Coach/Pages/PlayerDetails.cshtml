@page
@using TrainApp.Areas.Coach.Pages
@model PlayerDetailsModel

<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <link rel="stylesheet" href="/css/site.css" />
    <meta charset="utf-8" />
</head>

<body class="ur-body">
    <div class="header-container d-flex align-items-center">
        <a href="/Coach/TeamDetails?teamId=@Model.teamUser.TeamId">
            <i class="fa fa-arrow-left back-icon" aria-hidden="true"></i>
        </a>
        <h2 class="title text-center flex-grow-1">Profil zawodnika</h2>
    </div>

    <div class="card-container">
        <div class="card" style="border: 3px solid #ffca2c">
            <div class="card-header card-title">
                <div>
                    @Model.Player.Name @Model.Player.Surname
                </div>
                <a href="/Coach/EditParameters?playerId=@Model.Player.Id" style="border: 1px solid black; border-radius: 8px; justify-content: center;
                        align-items: center; display: flex; padding: 5px; margin-left: 10px;">
                    <i class="fa fa-pencil" aria-hidden="true"></i>
                </a>
            </div>
            <div class="card-body">
                <!-- Obliczanie wieku -->
                @{
                    DateTime birthDate = Model.Player.BirthDate;
                    int age = DateTime.Now.Year - birthDate.Year;
                    if (DateTime.Now.Date < birthDate.AddYears(age)) age--;
                }
                <div class="d-flex flex-wrap">
                    <div class="col-4">
                        <p><strong>Data urodzenia :</strong> @Model.Player.BirthDate.ToString("dd-MM-yyyy")</p>
                    </div>
                    <div class="col-4">
                        <p title="Wiek"><strong>Wiek:</strong> @age</p>
                    </div>
                </div>

                @if (Model.PlayerParameters == null)
                {
                    <p class="text-center">Brak zapisanych parametrów. Dodaj nowe parametry edytując zawodnika.</p>
                }
                else
                {
                    <div class="d-flex flex-wrap">
                        <div class="col-4">
                            <p title="Wiek"><strong>Wiek:</strong> @age</p>
                        </div>
                        <div class="col-4">
                            <p title="Wzrost zawodnika w centymetrach"><strong>Wzrost:</strong> @Model.PlayerParameters.Height</p>
                        </div>
                        <div class="col-4">
                            <p title="Waga zawodnika w kilogramach"><strong>Waga:</strong> @Model.PlayerParameters.Weight</p>
                        </div>
                        <div class="col-4">
                            <p title="Czas biegu na 100 metrów"><strong>Szybkość:</strong> @Model.PlayerParameters.Speed</p>
                        </div>
                        <div class="col-4">
                            <p title="Wynik BeepTest"><strong>Wytrzymałość:</strong> @Model.PlayerParameters.Endurance</p>
                        </div>
                        <div class="col-4">
                            <p title="Skok dosiężny mierzony w centymetrach"><strong>Skoczność:</strong> @Model.PlayerParameters.HighJump</p>
                        </div>
                        <div class="col-4">
                            <p title="Czas pokonania toru z pachołkami"><strong>Drybling:</strong> @Model.PlayerParameters.Dribble</p>
                        </div>
                        <div class="col-4">
                            <p title="Liczba przysiadów wykonanych w minutę"><strong>Siła nóg:</strong> @Model.PlayerParameters.LegStrength</p>
                        </div>
                        <div class="col-4">
                            <p title="Szybkość piłki mierzona po strzale"><strong>Siła strzału:</strong> @Model.PlayerParameters.ShotPower</p>
                        </div>
                        <div class="col-4">
                            <p title="Skłon poniżej poziomu stóp mierzony w centymetrach"><strong>Elastyczność:</strong> @Model.PlayerParameters.Flexibility</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="card-container">
        <div class="card" style="border: 3px solid #ffca2c">
            <div class="card-header card-title">
                <div>
                    Notatki
                </div>
                <a href="/Coach/AddNote?playerId=@Model.Player.Id" style="border: 1px solid black; border-radius: 8px; justify-content: center;
                        align-items: center; display: flex; padding: 5px; margin-left: 10px;">
                    <i class="fas fa-plus"></i>
                </a>
            </div>
            <div class="card-body">
                @if (Model.Notes == null || !Model.Notes.Any())
                {
                    <p>Brak notatek dla tego zawodnika.</p>
                }
                else
                {
                    <div class="gap-2 d-flex flex-column">
                        @foreach (var note in Model.Notes)
                        {
                            <div class="card">
                                <div class="card-body" style="display: flex; flex-direction: column; justify-content: space-between;">
                                    <h5 style="font-weight: 500;"> @note.CreationDate.ToString("dd-MM-yyyy HH:mm")</h5>
                                    <p class="card-text">@note.Text</p>
                                    <div class="note-actions">
                                        <a href="/Coach/EditNote?noteId=@note.Id" class="btn btn-warning">
                                            <i class="fas fa-edit"></i> Edytuj
                                        </a>
                                        <form method="post" asp-page-handler="DeleteNote" asp-route-noteId="@note.Id" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-danger">
                                                <i class="fas fa-trash-alt"></i> Usuń
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</body>