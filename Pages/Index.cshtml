@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
</head>

<style>
    /* Tło całego kontenera kalendarza */
    .start-page .calendar-container {
        background-color: #f8f9fa; /* Jasne tło */
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    /* Pasek narzędzi u góry kalendarza */
    .start-page .fc-toolbar {
        background-color: #ffca2c;
        border-radius: 8px;
        padding: 10px;
    }

        /* Przyciski nawigacji */
        .start-page .fc-toolbar button {
            background-color: #3b3f49;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            margin: 5px;
            text-transform: uppercase;
            font-weight: bold;
        }

    /* Stylowanie dni w siatce */
    .start-page .fc-daygrid-day {
        background-color: white;
        border: 1px solid #ddd;
    }

    /* Stylowanie wydarzeń */
    .start-page .fc-event {
        background-color: #ffca2c;
        color: black;
        font-weight: bold;
        border-radius: 5px;
        padding: 5px;
        text-align: center;
    }

    /* Tytuły dni tygodnia */
    .start-page .fc-col-header-cell {
        background-color: #ffca2c;
        color: white;
        text-transform: uppercase;
        padding: 10px 0;
        font-weight: bold;
    }

    /* Zaznaczenie bieżącego dnia */
    .start-page .fc-day-today {
        background-color: #ffedd5;
        border: 2px solid #ffca2c;
    }

</style>

<body class="start-page">
    <div class="main">
        <div class="content @((User.Identity.IsAuthenticated) ? "authenticated" : "unauthenticated")">

            @if (User.IsInRole("Admin"))
            {
                <div class="text">
                    <h2>Witaj w panelu zarządzania szkółką</h2>
                    <p>
                        Twórz drużyny, przypisuj trenerów, zarządzaj kalendarzem i kontroluj wszystkie działania w szkółce. Zorganizuj pracę na najwyższym poziomie!
                    </p>
                </div>
                <div class="picture-div">
                    <img class="picture" src="~/images/index_logo2.png" />
                </div>
            }
            else if (User.IsInRole("Coach"))
            {
                <div class="text">
                    <h2>Witaj w centrum zarządzania drużyną!</h2>
                    <p>
                        Planowanie treningów i monitorowanie postępów zawodników <br /> w jednym miejscu.
                    </p>
                </div>
                <div class="picture-div">
                    <img class="picture" src="~/images/index_logo2.png" />
                </div>
            }
            else if (User.IsInRole("Player"))
            {
                <div class="text">
                    <h2>Witaj w centrum treningowym!</h2>
                    <p>
                        Sprawdzaj nadchodzące wydarzenia i realizuj przypisane zadania. Twoja droga do sukcesu zaczyna się tutaj!
                    </p>
                </div>
                <div class="picture-div">
                    <img class="picture" src="~/images/index_logo2.png" />
                </div>
            }
            else
            {
                <div class="text">
                    <h2>Zarządzaj swoją szkółką  łatwo <br /> i efektywnie</h2>
                    <p>
                        Twórz druzyny, planuj treningi, przypisuj zadania i monitoruj ich wykonanie. Trenerzy z łatwością mogą organizować treningi, a zawodnicy mają dostęp do kalendarza z nadchodzącymi wydarzeniami oraz listy zadań do wykonania. Wszysto co potrzebne do usprawnienia funkcjonowania swojej szkółki w jednym miejscu
                    </p>
                    <a href="Identity/Account/Register" class="buttonR">Zarejestruj się teraz</a>
                </div>
                <div class="picture-div">
                    <img class="picture" src="~/images/index_logo2.png" />
                </div>
            }
        </div>
    </div>
    @if (User.IsInRole("Coach"))
    {
        <div class="calendar-container">
            <script>
                document.addEventListener('DOMContentLoaded', function () {

                    var trainingsRaw = @Html.Raw(Json.Serialize(ViewData["Trainings"]));
                    var trainings = trainingsRaw.$values || [];

                    var calendarEl = document.getElementById('calendar')
                    var calendar = new FullCalendar.Calendar(calendarEl, {
                        locale: 'pl',
                        firstDay: 1,
                        initialView: 'dayGridMonth',
                        headerToolbar: {
                            left: 'prev,next today',
                            center: 'title',
                            right: 'dayGridMonth,timeGridWeek,timeGridDay'
                        },
                        buttonText: {
                            today: 'Dziś',
                            month: 'Miesiąc',
                            week: 'Tydzień',
                            day: 'Dzień'
                        },
                        events: trainings.map(training => ({
                            title: training.title,
                            start: training.start,
                            end: training.end,
                            color: training.color // Przekazujemy kolor z backendu
                        })),
                        eventClick: function (info) {

                            if (confirm('Czy na pewno chcesz usunąć ten trening?')) {

                                var trainingId = info.event.id;

                                fetch('/Index?handler=DeleteTraining', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                                    },
                                    body: JSON.stringify({ id: trainingId })
                                })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            alert('Trening został usunięty');
                                            info.event.remove();
                                        } else {
                                            alert('Wystąpił błąd: ' + data.message);
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Błąd:', error);
                                    });
                            }
                        }
                    });
                    calendar.render()
                });
            </script>

            <div id="calendar"></div>
            <div style="margin-top: 10px; display: flex; justify-content: center;">
                <a href="/Coach/AddTraining" class="btn btn-warning">
                    <i class="fas fa-plus"></i>
                    Dodaj wydarzenie
                </a>
            </div>
        </div>

        
    }
    else if (User.IsInRole("Player"))
    {
        <div class="calendar-container">
            <script>
                document.addEventListener('DOMContentLoaded', function () {

                    var trainingsRaw = @Html.Raw(Json.Serialize(ViewData["Trainings"]));
                    var trainings = trainingsRaw.$values || [];

                    var calendarEl = document.getElementById('calendar');
                    var calendar = new FullCalendar.Calendar(calendarEl, {
                        locale: 'pl',
                        firstDay: 1,
                        initialView: 'dayGridMonth',
                        headerToolbar: {
                            left: 'prev,next today',
                            center: 'title',
                            right: 'dayGridMonth,timeGridWeek,timeGridDay'
                        },
                        buttonText: {
                            today: 'Dziś',
                            month: 'Miesiąc',
                            week: 'Tydzień',
                            day: 'Dzień'
                        },
                        events: trainings.map(training => ({
                            title: training.title,
                            start: training.start,
                            end: training.end,
                            color: training.color 
                        }))
                    });
                    calendar.render();
                });
            </script>

            <div id="calendar"></div>
        </div>
    }
</body>
